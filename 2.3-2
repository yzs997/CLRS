#include <iostream>
#include <vector>

using namespace std; 

void merge_sort(vector<int>&, int, int);
void merge(vector<int>&, int, int, int);

int main()
{
	vector<int> vec = { 5, 4, 3, 2, 1 };
	merge_sort(vec, 0, vec.size());
	for (auto i : vec)
		cout << i << " ";
	cout << endl;
	getchar();
	return 0;
}

void merge_sort(vector<int> &vec, int p, int r)
{
	if (r - p > 1) {
		int q = (p + r) / 2;
		merge_sort(vec, p, q);
		merge_sort(vec, q, r);
		merge(vec, p, q, r);
	}
}

void merge(vector<int> &vec, int p, int q, int r)
{
	int n1 = q - p;
	int n2 = r - q;
	vector<int> vec1(n1);
	vector<int> vec2(n2);
	for (int i = 0; i != n1; i++) 
		vec1[i] = vec[p + i];
	for (int i = 0; i != n2; i++)
		vec2[i] = vec[q + i];
	int j = 0;
	int k = 0;
	while (j < n1 && k < n2) {
		if (vec1[j] <= vec2[k])
			vec[p++] = vec1[j++];
		else
			vec[p++] = vec2[k++];
	}

	if (j >= n1) 
		while (k < n2)
			vec[p++] = vec2[k++];
	else 
		while (j < n1)
			vec[p++] = vec1[j++];
}
